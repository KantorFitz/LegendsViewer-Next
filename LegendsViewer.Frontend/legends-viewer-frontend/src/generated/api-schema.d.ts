/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Artifact": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Artifact/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Artifact"];
                        "application/json": components["schemas"]["Artifact"];
                        "text/json": components["schemas"]["Artifact"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Artifact/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Artifact/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Artifact/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Bookmark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Bookmark"][];
                        "application/json": components["schemas"]["Bookmark"][];
                        "text/json": components["schemas"]["Bookmark"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Bookmark/{filePath}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filePath: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Bookmark"];
                        "application/json": components["schemas"]["Bookmark"];
                        "text/json": components["schemas"]["Bookmark"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Bookmark/loadByFullPath": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": string;
                    "text/json": string;
                    "application/*+json": string;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Bookmark"];
                        "application/json": components["schemas"]["Bookmark"];
                        "text/json": components["schemas"]["Bookmark"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Bookmark/loadByFolderAndFile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    fileName?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": string;
                    "text/json": string;
                    "application/*+json": string;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Bookmark"];
                        "application/json": components["schemas"]["Bookmark"];
                        "text/json": components["schemas"]["Bookmark"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Construction": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Construction/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldConstruction"];
                        "application/json": components["schemas"]["WorldConstruction"];
                        "text/json": components["schemas"]["WorldConstruction"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Construction/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Construction/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Construction/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DanceForm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DanceForm/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["DanceForm"];
                        "application/json": components["schemas"]["DanceForm"];
                        "text/json": components["schemas"]["DanceForm"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DanceForm/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DanceForm/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DanceForm/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Entity/civs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Entity"][];
                        "application/json": components["schemas"]["Entity"][];
                        "text/json": components["schemas"]["Entity"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Entity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Entity/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Entity"];
                        "application/json": components["schemas"]["Entity"];
                        "text/json": components["schemas"]["Entity"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Entity/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Entity/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Entity/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Era": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Era/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Era"];
                        "application/json": components["schemas"]["Era"];
                        "text/json": components["schemas"]["Era"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Era/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Era/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Era/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/FileSystem": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["FilesAndSubdirectoriesDto"];
                        "application/json": components["schemas"]["FilesAndSubdirectoriesDto"];
                        "text/json": components["schemas"]["FilesAndSubdirectoriesDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/FileSystem/{path}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    path: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["FilesAndSubdirectoriesDto"];
                        "application/json": components["schemas"]["FilesAndSubdirectoriesDto"];
                        "text/json": components["schemas"]["FilesAndSubdirectoriesDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/FileSystem/{currentPath}/{subFolder}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    currentPath: string;
                    subFolder: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistoricalFigure": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistoricalFigure/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["HistoricalFigure"];
                        "application/json": components["schemas"]["HistoricalFigure"];
                        "text/json": components["schemas"]["HistoricalFigure"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistoricalFigure/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistoricalFigure/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/HistoricalFigure/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Landmass": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Landmass/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Landmass"];
                        "application/json": components["schemas"]["Landmass"];
                        "text/json": components["schemas"]["Landmass"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Landmass/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Landmass/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Landmass/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MountainPeak": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MountainPeak/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["MountainPeak"];
                        "application/json": components["schemas"]["MountainPeak"];
                        "text/json": components["schemas"]["MountainPeak"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MountainPeak/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MountainPeak/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MountainPeak/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MusicalForm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MusicalForm/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["MusicalForm"];
                        "application/json": components["schemas"]["MusicalForm"];
                        "text/json": components["schemas"]["MusicalForm"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MusicalForm/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MusicalForm/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/MusicalForm/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PoeticForm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PoeticForm/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PoeticForm"];
                        "application/json": components["schemas"]["PoeticForm"];
                        "text/json": components["schemas"]["PoeticForm"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PoeticForm/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PoeticForm/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/PoeticForm/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Region": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Region/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldRegion"];
                        "application/json": components["schemas"]["WorldRegion"];
                        "text/json": components["schemas"]["WorldRegion"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Region/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Region/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Region/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/River": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/River/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["River"];
                        "application/json": components["schemas"]["River"];
                        "text/json": components["schemas"]["River"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/River/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/River/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/River/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Site": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Site/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Site"];
                        "application/json": components["schemas"]["Site"];
                        "text/json": components["schemas"]["Site"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Site/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Site/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Site/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Structure": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Structure/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Structure"];
                        "application/json": components["schemas"]["Structure"];
                        "text/json": components["schemas"]["Structure"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Structure/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Structure/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Structure/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/UndergroundRegion": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/UndergroundRegion/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["UndergroundRegion"];
                        "application/json": components["schemas"]["UndergroundRegion"];
                        "text/json": components["schemas"]["UndergroundRegion"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/UndergroundRegion/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/UndergroundRegion/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/UndergroundRegion/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/World": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldDto"];
                        "application/json": components["schemas"]["WorldDto"];
                        "text/json": components["schemas"]["WorldDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/world/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/underworld/{size}/{depth}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    size: components["schemas"]["MapSize"];
                    depth: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/landmass/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/mountainpeak/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/region/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/river/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/construction/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/undergroundregion/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/site/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/structure/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/entity/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WorldMap/artifact/{id}/{size}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                    size: components["schemas"]["MapSize"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WrittenContent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldObjectDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WrittenContent/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WrittenContent"];
                        "application/json": components["schemas"]["WrittenContent"];
                        "text/json": components["schemas"]["WrittenContent"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WrittenContent/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WrittenContent/{id}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageNumber?: number;
                    pageSize?: number;
                    sortKey?: string;
                    sortOrder?: string;
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "application/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                        "text/json": components["schemas"]["WorldEventDtoPaginatedResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WrittenContent/{id}/eventchart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ChartDataDto"];
                        "application/json": components["schemas"]["ChartDataDto"];
                        "text/json": components["schemas"]["ChartDataDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Artifact: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            item?: string | null;
            readonly creatorLink?: string | null;
            readonly holderLink?: string | null;
            readonly structureLink?: string | null;
            /** Format: int32 */
            holderId?: number;
            description?: string | null;
            material?: string | null;
            /** Format: int32 */
            pageCount?: number;
            readonly writtenContentLinks?: string[] | null;
            /** Format: int32 */
            absTileX?: number;
            /** Format: int32 */
            absTileY?: number;
            /** Format: int32 */
            absTileZ?: number;
            coordinates?: components["schemas"]["Location"][] | null;
            readonly siteLink?: string | null;
            readonly regionLink?: string | null;
        };
        Battle: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            startSeconds72?: number;
            /** Format: int32 */
            endYear?: number;
            /** Format: int32 */
            endSeconds72?: number;
            type?: string | null;
            parentCollection?: components["schemas"]["EventCollection"];
            collection?: components["schemas"]["WorldEvent"][] | null;
            collections?: components["schemas"]["EventCollection"][] | null;
            collectionIDs?: number[] | null;
            notable?: boolean;
            allEvents?: components["schemas"]["WorldEvent"][] | null;
            world?: components["schemas"]["World"];
            name?: string | null;
            outcome?: components["schemas"]["BattleOutcome"];
            coordinates?: components["schemas"]["Location"];
            site?: components["schemas"]["Site"];
            region?: components["schemas"]["WorldRegion"];
            undergroundRegion?: components["schemas"]["UndergroundRegion"];
            conquering?: components["schemas"]["SiteConquered"];
            attacker?: components["schemas"]["Entity"];
            defender?: components["schemas"]["Entity"];
            victor?: components["schemas"]["Entity"];
            attackers?: components["schemas"]["Squad"][] | null;
            defenders?: components["schemas"]["Squad"][] | null;
            notableAttackers?: components["schemas"]["HistoricalFigure"][] | null;
            notableDefenders?: components["schemas"]["HistoricalFigure"][] | null;
            nonCombatants?: components["schemas"]["HistoricalFigure"][] | null;
            attackerSquads?: components["schemas"]["Squad"][] | null;
            defenderSquads?: components["schemas"]["Squad"][] | null;
            /** Format: int32 */
            readonly attackerCount?: number;
            /** Format: int32 */
            readonly defenderCount?: number;
            /** Format: int32 */
            readonly attackersRemainingCount?: number;
            /** Format: int32 */
            readonly defendersRemainingCount?: number;
            /** Format: int32 */
            readonly deathCount?: number;
            deaths?: {
                [key: string]: number;
            } | null;
            readonly notableDeaths?: components["schemas"]["HistoricalFigure"][] | null;
            /** Format: int32 */
            attackerDeathCount?: number;
            /** Format: int32 */
            defenderDeathCount?: number;
            /** Format: double */
            attackersToDefenders?: number;
            /** Format: double */
            attackersToDefendersRemaining?: number;
            individualMercenaries?: boolean;
            companyMercenaries?: boolean;
            attackingMercenaryEntity?: components["schemas"]["Entity"];
            defendingMercenaryEntity?: components["schemas"]["Entity"];
            attackingSquadAnimated?: boolean;
            defendingSquadAnimated?: boolean;
            attackerSupportMercenaryEntities?: components["schemas"]["Entity"][] | null;
            defenderSupportMercenaryEntities?: components["schemas"]["Entity"][] | null;
            attackerSupportMercenaryHfs?: components["schemas"]["HistoricalFigure"][] | null;
            defenderSupportMercenaryHfs?: components["schemas"]["HistoricalFigure"][] | null;
        };
        /** @enum {string} */
        BattleOutcome: "Unknown" | "AttackerWon" | "DefenderWon";
        BeastAttack: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            startSeconds72?: number;
            /** Format: int32 */
            endYear?: number;
            /** Format: int32 */
            endSeconds72?: number;
            type?: string | null;
            parentCollection?: components["schemas"]["EventCollection"];
            collection?: components["schemas"]["WorldEvent"][] | null;
            collections?: components["schemas"]["EventCollection"][] | null;
            collectionIDs?: number[] | null;
            notable?: boolean;
            allEvents?: components["schemas"]["WorldEvent"][] | null;
            world?: components["schemas"]["World"];
            name?: string | null;
            /** Format: int32 */
            readonly deathCount?: number;
            /** Format: int32 */
            ordinal?: number;
            coordinates?: components["schemas"]["Location"];
            region?: components["schemas"]["WorldRegion"];
            undergroundRegion?: components["schemas"]["UndergroundRegion"];
            site?: components["schemas"]["Site"];
            defender?: components["schemas"]["Entity"];
            beast?: components["schemas"]["HistoricalFigure"];
            readonly deaths?: components["schemas"]["HistoricalFigure"][] | null;
            parentEventCol?: components["schemas"]["EventCollection"];
        };
        Bookmark: {
            filePath?: string | null;
            worldName?: string | null;
            worldAlternativeName?: string | null;
            worldRegionName?: string | null;
            worldTimestamps?: string[] | null;
            /** Format: int32 */
            worldWidth?: number;
            /** Format: int32 */
            worldHeight?: number;
            /** Format: byte */
            worldMapImage?: string | null;
            state?: components["schemas"]["BookmarkState"];
            loadedTimestamp?: string | null;
            latestTimestamp?: string | null;
        };
        /** @enum {string} */
        BookmarkState: "Default" | "Loading" | "Loaded";
        ChartDataDto: {
            labels?: string[] | null;
            datasets?: components["schemas"]["ChartDatasetDto"][] | null;
        };
        ChartDatasetDto: {
            label?: string | null;
            data?: number[] | null;
            borderColor?: string[] | null;
            backgroundColor?: string[] | null;
        };
        Color: {
            /** Format: int32 */
            readonly r?: number;
            /** Format: int32 */
            readonly g?: number;
            /** Format: int32 */
            readonly b?: number;
            /** Format: int32 */
            readonly a?: number;
            readonly isKnownColor?: boolean;
            readonly isEmpty?: boolean;
            readonly isNamedColor?: boolean;
            readonly isSystemColor?: boolean;
            readonly name?: string | null;
        };
        CreatureInfo: {
            id?: string | null;
            nameSingular?: string | null;
            namePlural?: string | null;
        };
        CreatureType: {
            type?: string | null;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            startMonth?: number;
            /** Format: int32 */
            startDay?: number;
        };
        DanceForm: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            description?: string | null;
            formType?: components["schemas"]["FormType"];
        };
        /** @enum {string} */
        DeathCause: "Unknown" | "None" | "Struck" | "OldAge" | "Thirst" | "Suffocated" | "Bled" | "Cold" | "CrushedByABridge" | "Drowned" | "Starved" | "InACage" | "Infection" | "CollidedWithAnObstacle" | "PutToRest" | "StarvedQuit" | "Trap" | "DragonsFire" | "Burned" | "Murdered" | "Shot" | "CaveIn" | "FrozenInWater" | "ExecutedGeneric" | "ExecutedFedToBeasts" | "ExecutedBurnedAlive" | "ExecutedCrucified" | "ExecutedDrowned" | "ExecutedHackedToPieces" | "ExecutedBuriedAlive" | "ExecutedBeheaded" | "DrainedBlood" | "Collapsed" | "ScaredToDeath" | "Scuttled" | "FlyingObject" | "Slaughtered" | "Melted" | "Spikes" | "Heat" | "Vanish" | "CoolingMagma" | "Vehicle" | "SuicideDrowned" | "SuicideLeaping" | "Chasm";
        DwarfObject: Record<string, never>;
        Entity: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            readonly parentLink?: string | null;
            race?: components["schemas"]["CreatureInfo"];
            readonly worshippedLinks?: string[] | null;
            leaderTypes?: string[] | null;
            populations?: components["schemas"]["Population"][] | null;
            readonly originStructureLink?: string | null;
            readonly groupLinks?: string[] | null;
            readonly currentSiteLinks?: string[] | null;
            readonly lostSiteLinks?: string[] | null;
            readonly siteLinks?: string[] | null;
            honors?: components["schemas"]["Honor"][] | null;
            entityType?: components["schemas"]["EntityType"];
            isCiv?: boolean;
            coordinates?: components["schemas"]["Location"][] | null;
            weapons?: string[] | null;
            profession?: string | null;
            readonly warLinks?: string[] | null;
            readonly warAttackingLinks?: string[] | null;
            readonly warDefendingLinks?: string[] | null;
            /** Format: int32 */
            warVictories?: number;
            /** Format: int32 */
            warLosses?: number;
            /** Format: int32 */
            warKills?: number;
            /** Format: int32 */
            warDeaths?: number;
            readonly allLeaderLinks?: string[] | null;
            readonly populationsAsList?: string[] | null;
            /** Format: double */
            readonly warKillDeathRatio?: number;
            lineColor?: components["schemas"]["Color"];
            icon?: string | null;
        };
        EntityLink: {
            readonly entityToLink?: string | null;
            type?: components["schemas"]["EntityLinkType"];
            /** Format: int32 */
            strength?: number;
            /** Format: int32 */
            positionId?: number;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            endYear?: number;
        };
        /** @enum {string} */
        EntityLinkType: "Unknown" | "Criminal" | "Enemy" | "Member" | "FormerMember" | "Position" | "FormerPosition" | "Prisoner" | "FormerPrisoner" | "FormerSlave" | "Slave" | "Hero";
        EntityPopulation: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            race?: components["schemas"]["CreatureInfo"];
            /** Format: int32 */
            count?: number;
            /** Format: int32 */
            entityId?: number;
            readonly entityLink?: string | null;
            readonly memberLinks?: string[] | null;
        };
        EntityReputation: {
            readonly entityToLink?: string | null;
            /** Format: int32 */
            unsolvedMurders?: number;
            /** Format: int32 */
            firstSuspectedAgelessYear?: number;
            firstSuspectedAgelessSeason?: string | null;
            reputations?: {
                /** Format: int32 */
                Unknown?: number;
                /** Format: int32 */
                EnemyFighter?: number;
                /** Format: int32 */
                TradePartner?: number;
                /** Format: int32 */
                Killer?: number;
                /** Format: int32 */
                Poet?: number;
                /** Format: int32 */
                Bard?: number;
                /** Format: int32 */
                Storyteller?: number;
                /** Format: int32 */
                Dancer?: number;
                /** Format: int32 */
                Friendly?: number;
                /** Format: int32 */
                Buddy?: number;
                /** Format: int32 */
                Grudge?: number;
                /** Format: int32 */
                Bonded?: number;
                /** Format: int32 */
                Quarreler?: number;
                /** Format: int32 */
                Psychopath?: number;
                /** Format: int32 */
                LoyalSoldier?: number;
                /** Format: int32 */
                Bully?: number;
                /** Format: int32 */
                Hero?: number;
                /** Format: int32 */
                Hunter?: number;
                /** Format: int32 */
                InformationSource?: number;
                /** Format: int32 */
                TreasureHunter?: number;
                /** Format: int32 */
                KnowledgePreserver?: number;
                /** Format: int32 */
                ProtectorOfWeak?: number;
                /** Format: int32 */
                Love?: number;
                /** Format: int32 */
                Respect?: number;
                /** Format: int32 */
                Trust?: number;
                /** Format: int32 */
                Loyalty?: number;
                /** Format: int32 */
                Fear?: number;
                /** Format: int32 */
                Comrade?: number;
                /** Format: int32 */
                Murderer?: number;
                /** Format: int32 */
                Violent?: number;
                /** Format: int32 */
                Flatterer?: number;
            } | null;
        };
        /** @enum {string} */
        EntityType: "Unknown" | "Civilization" | "NomadicGroup" | "MigratingGroup" | "Outcast" | "Religion" | "SiteGovernment" | "PerformanceTroupe" | "MercenaryCompany" | "Guild" | "MilitaryUnit" | "MerchantCompany";
        Era: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            wars?: components["schemas"]["War"][] | null;
        };
        EventCollection: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            startSeconds72?: number;
            /** Format: int32 */
            endYear?: number;
            /** Format: int32 */
            endSeconds72?: number;
            type?: string | null;
            parentCollection?: components["schemas"]["EventCollection"];
            collection?: components["schemas"]["WorldEvent"][] | null;
            collections?: components["schemas"]["EventCollection"][] | null;
            collectionIDs?: number[] | null;
            notable?: boolean;
            allEvents?: components["schemas"]["WorldEvent"][] | null;
            world?: components["schemas"]["World"];
        };
        /** @enum {string} */
        Evilness: "Neutral" | "Good" | "Evil";
        FilesAndSubdirectoriesDto: {
            currentDirectory?: string | null;
            parentDirectory?: string | null;
            subdirectories?: string[] | null;
            files?: string[] | null;
        };
        /** @enum {string} */
        FormType: "Unknown" | "Musical" | "Poetic" | "Dance";
        /** @enum {string} */
        HfState: "Unknown" | "None" | "Settled" | "Wandering" | "Scouting" | "Snatcher" | "Refugee" | "Thief" | "Hunting" | "Visiting";
        HistoricalFigure: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            readonly titleRaceString?: string | null;
            race?: components["schemas"]["CreatureInfo"];
            caste?: string | null;
            associatedType?: string | null;
            previousRace?: string | null;
            /** Format: int32 */
            entityPopulationId?: number;
            entityPopulation?: components["schemas"]["EntityPopulation"];
            currentState?: components["schemas"]["HfState"];
            usedIdentityIds?: number[] | null;
            /** Format: int32 */
            currentIdentityId?: number;
            readonly holdingArtifactLinks?: string[] | null;
            states?: components["schemas"]["State"][] | null;
            creatureTypes?: components["schemas"]["CreatureType"][] | null;
            relatedHistoricalFigures?: components["schemas"]["HistoricalFigureLink"][] | null;
            siteProperties?: components["schemas"]["SiteProperty"][] | null;
            relatedEntities?: components["schemas"]["EntityLink"][] | null;
            reputations?: components["schemas"]["EntityReputation"][] | null;
            relationshipProfiles?: components["schemas"]["RelationshipProfileHf"][] | null;
            relatedSites?: components["schemas"]["SiteLink"][] | null;
            readonly relatedRegionLinks?: string[] | null;
            skills?: components["schemas"]["Skill"][] | null;
            vagueRelationships?: components["schemas"]["VagueRelationship"][] | null;
            readonly dedicatedStructuresLinks?: string[] | null;
            /** Format: int32 */
            age?: number;
            /** Format: int32 */
            appeared?: number;
            /** Format: int32 */
            birthYear?: number;
            /** Format: int32 */
            birthSeconds72?: number;
            /** Format: int32 */
            deathYear?: number;
            /** Format: int32 */
            deathSeconds72?: number;
            deathCause?: components["schemas"]["DeathCause"];
            activeInteractions?: string[] | null;
            interactionKnowledge?: string[] | null;
            goal?: string | null;
            interaction?: string | null;
            readonly lineageCurseParentToLink?: string | null;
            readonly lineageCurseChildLinks?: string[] | null;
            journeyPets?: string[] | null;
            readonly hfKillLinks?: string[] | null;
            readonly snatchedHfLinks?: string[] | null;
            spheres?: string[] | null;
            readonly battleLinks?: string[] | null;
            readonly battlesAttackingLinks?: string[] | null;
            readonly battlesDefendingLinks?: string[] | null;
            readonly battlesNonCombatantLinks?: string[] | null;
            positions?: components["schemas"]["Position"][] | null;
            readonly worshippedByToLink?: string | null;
            readonly beastAttackLinks?: string[] | null;
            honorEntity?: components["schemas"]["HonorEntity"];
            intrigueActors?: components["schemas"]["IntrigueActor"][] | null;
            intriguePlots?: components["schemas"]["IntriguePlot"][] | null;
            identities?: components["schemas"]["Identity"][] | null;
            alive?: boolean;
            deity?: boolean;
            skeleton?: boolean;
            force?: boolean;
            zombie?: boolean;
            ghost?: boolean;
            animated?: boolean;
            animatedType?: string | null;
            adventurer?: boolean;
            breedId?: string | null;
        };
        HistoricalFigureLink: {
            readonly hfLink?: string | null;
            type?: components["schemas"]["HistoricalFigureLinkType"];
            /** Format: int32 */
            strength?: number;
        };
        /** @enum {string} */
        HistoricalFigureLinkType: "Unknown" | "Apprentice" | "Master" | "FormerApprentice" | "FormerMaster" | "Child" | "Deity" | "Father" | "Lover" | "Mother" | "Spouse" | "Imprisoner" | "Prisoner" | "ExSpouse" | "Companion" | "PetOwner" | "FormerSpouse" | "DeceasedSpouse";
        Honor: {
            readonly entityToLink?: string | null;
            /** Format: int32 */
            id?: number;
            name?: string | null;
            /** Format: int32 */
            givesPrecedence?: number;
            requiredSkillName?: string | null;
            /** Format: int32 */
            requiredSkillIpTotal?: number;
            /** Format: int32 */
            requiredBattles?: number;
            /** Format: int32 */
            requiredYears?: number;
            /** Format: int32 */
            requiredKills?: number;
            /** Format: int32 */
            exemptEpId?: number;
            /** Format: int32 */
            exemptFormerEpId?: number;
            grantedToEverybody?: boolean;
            requiresAnyMeleeOrRangedSkill?: boolean;
            requiredSkill?: components["schemas"]["Skill"];
            readonly honoredHfLinks?: string[] | null;
        };
        HonorEntity: {
            readonly entityToLink?: string | null;
            honors?: components["schemas"]["Honor"][] | null;
            /** Format: int32 */
            battles?: number;
            /** Format: int32 */
            kills?: number;
        };
        Identity: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            readonly historicalFigureToLink?: string | null;
            /** Format: int32 */
            birthYear?: number;
            /** Format: int32 */
            birthSeconds72?: number;
            readonly entityToLink?: string | null;
            race?: components["schemas"]["CreatureInfo"];
            caste?: string | null;
            profession?: string | null;
        };
        IntrigueActor: {
            /** Format: int32 */
            localId?: number;
            role?: string | null;
            strategy?: string | null;
            /** Format: int32 */
            readonly entityId?: number;
            /** Format: int32 */
            hfId?: number;
            /** Format: int32 */
            handleActorId?: number;
            /** Format: int32 */
            strategyEnId?: number;
            /** Format: int32 */
            strategyEppId?: number;
            promisedActorImmortality?: boolean;
            promisedMeImmortality?: boolean;
        };
        IntriguePlot: {
            /** Format: int32 */
            localId?: number;
            type?: string | null;
            /** Format: int32 */
            readonly entityId?: number;
            onHold?: boolean;
            /** Format: int32 */
            artifactId?: number;
            /** Format: int32 */
            actorId?: number;
            /** Format: int32 */
            parentPlotId?: number;
            /** Format: int32 */
            parentPlotHfId?: number;
            /** Format: int32 */
            delegatedPlotId?: number;
            /** Format: int32 */
            delegatedPlotHfId?: number;
            plotActors?: components["schemas"]["PlotActor"][] | null;
        };
        Landmass: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            coordinates?: components["schemas"]["Location"][] | null;
        };
        Location: {
            /** Format: int32 */
            x?: number;
            /** Format: int32 */
            y?: number;
        };
        /** @enum {string} */
        MapSize: "Default" | "Small" | "Large";
        MountainPeak: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            region?: components["schemas"]["WorldRegion"];
            coordinates?: components["schemas"]["Location"][] | null;
            /** Format: int32 */
            height?: number;
            heightMeter?: string | null;
            isVolcano?: boolean;
            readonly typeAsString?: string | null;
        };
        MusicalForm: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            description?: string | null;
            formType?: components["schemas"]["FormType"];
        };
        Official: {
            readonly historicalFigureToLink?: string | null;
        };
        OwnerPeriod: {
            readonly siteToLink?: string | null;
            readonly founderToLink?: string | null;
            readonly ownerToLink?: string | null;
            readonly enderToLink?: string | null;
            readonly destroyerToLink?: string | null;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            endYear?: number;
            startCause?: string | null;
            endCause?: string | null;
        };
        PlotActor: {
            /** Format: int32 */
            actorId?: number;
            plotRole?: string | null;
            /** Format: int32 */
            agreementId?: number;
            agreementHasMessenger?: boolean;
        };
        PoeticForm: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            description?: string | null;
            formType?: components["schemas"]["FormType"];
        };
        Point: {
            readonly isEmpty?: boolean;
            /** Format: int32 */
            x?: number;
            /** Format: int32 */
            y?: number;
        };
        Population: {
            readonly isMainRace?: boolean;
            readonly isOutcasts?: boolean;
            readonly isPrisoners?: boolean;
            readonly isSlaves?: boolean;
            readonly isVisitors?: boolean;
            readonly isAnimalPeople?: boolean;
            race?: components["schemas"]["CreatureInfo"];
            /** Format: int32 */
            count?: number;
        };
        Position: {
            readonly entityToLink?: string | null;
            title?: string | null;
            /** Format: int32 */
            began?: number;
            /** Format: int32 */
            ended?: number;
            /** Format: int32 */
            length?: number;
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        } & {
            [key: string]: unknown;
        };
        Rectangle: {
            location?: components["schemas"]["Point"];
            size?: components["schemas"]["Size"];
            /** Format: int32 */
            x?: number;
            /** Format: int32 */
            y?: number;
            /** Format: int32 */
            width?: number;
            /** Format: int32 */
            height?: number;
            /** Format: int32 */
            readonly left?: number;
            /** Format: int32 */
            readonly top?: number;
            /** Format: int32 */
            readonly right?: number;
            /** Format: int32 */
            readonly bottom?: number;
            readonly isEmpty?: boolean;
        };
        Reference: {
            /** Format: int32 */
            id?: number;
            type?: components["schemas"]["ReferenceType"];
        };
        /** @enum {string} */
        ReferenceType: "Unknown" | "WrittenContent" | "PoeticForm" | "MusicalForm" | "DanceForm" | "ValueLevel" | "KnowledgeScholarFlag" | "Site" | "HistoricalEvent" | "Interaction" | "Entity" | "HistoricalFigure" | "Language" | "Subregion" | "AbstractBuilding" | "Artifact" | "Sphere";
        /** @enum {string} */
        RegionType: "Default" | "Mountains" | "Forest" | "Desert" | "Ocean" | "Wetland" | "Tundra" | "Glacier" | "Grassland" | "Hills" | "Lake" | "Cavern" | "Underworld" | "Magma";
        /** @enum {string} */
        RelationShipProfileType: "Unknown" | "Visual" | "Historical" | "Identity";
        RelationshipProfileHf: {
            /** Format: int32 */
            meetCount?: number;
            /** Format: int32 */
            lastMeetYear?: number;
            /** Format: int32 */
            lastMeetSeconds72?: number;
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            historicalFigureId?: number;
            /** Format: int32 */
            knownIdentityId?: number;
            reputations?: components["schemas"]["Reputation"][] | null;
            type?: components["schemas"]["RelationShipProfileType"];
        };
        Reputation: {
            type?: components["schemas"]["ReputationType"];
            /** Format: int32 */
            strength?: number;
            /** Format: int32 */
            identityId?: number;
        };
        /** @enum {string} */
        ReputationType: "Unknown" | "EnemyFighter" | "TradePartner" | "Killer" | "Poet" | "Bard" | "Storyteller" | "Dancer" | "Friendly" | "Buddy" | "Grudge" | "Bonded" | "Quarreler" | "Psychopath" | "LoyalSoldier" | "Bully" | "Hero" | "Hunter" | "InformationSource" | "TreasureHunter" | "KnowledgePreserver" | "ProtectorOfWeak" | "Love" | "Respect" | "Trust" | "Loyalty" | "Fear" | "Comrade" | "Murderer" | "Violent" | "Flatterer";
        River: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            endPos?: components["schemas"]["Location"];
            path?: string | null;
            coordinates?: components["schemas"]["Location"][] | null;
        };
        Site: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            readonly regionToLink?: string | null;
            siteType?: components["schemas"]["SiteType"];
            untranslatedName?: string | null;
            coordinates?: components["schemas"]["Location"][] | null;
            rectangle?: components["schemas"]["Rectangle"];
            hasStructures?: boolean;
            readonly structuresLinks?: string[] | null;
            readonly battleLinks?: string[] | null;
            readonly conqueringLinks?: string[] | null;
            readonly raidLinks?: string[] | null;
            readonly purgeLinks?: string[] | null;
            readonly persecutionLinks?: string[] | null;
            readonly insurrectionLinks?: string[] | null;
            readonly duelLinks?: string[] | null;
            readonly abductionLinks?: string[] | null;
            readonly beastAttackLinks?: string[] | null;
            readonly relatedHistoricalFigureLinks?: string[] | null;
            ownerHistory?: components["schemas"]["OwnerPeriod"][] | null;
            siteProperties?: components["schemas"]["SiteProperty"][] | null;
            readonly currentOwnerToLink?: string | null;
            readonly connectionLinks?: string[] | null;
            populations?: components["schemas"]["Population"][] | null;
            officials?: components["schemas"]["Official"][] | null;
            deathsByRace?: components["schemas"]["ChartDataDto"];
            readonly notableDeathLinks?: string[] | null;
        };
        SiteConquered: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            startSeconds72?: number;
            /** Format: int32 */
            endYear?: number;
            /** Format: int32 */
            endSeconds72?: number;
            type?: string | null;
            parentCollection?: components["schemas"]["EventCollection"];
            collection?: components["schemas"]["WorldEvent"][] | null;
            collections?: components["schemas"]["EventCollection"][] | null;
            collectionIDs?: number[] | null;
            notable?: boolean;
            allEvents?: components["schemas"]["WorldEvent"][] | null;
            world?: components["schemas"]["World"];
            name?: string | null;
            /** Format: int32 */
            deathCount?: number;
            /** Format: int32 */
            ordinal?: number;
            conquerType?: components["schemas"]["SiteConqueredType"];
            site?: components["schemas"]["Site"];
            attacker?: components["schemas"]["Entity"];
            defender?: components["schemas"]["Entity"];
            battle?: components["schemas"]["Battle"];
            readonly deaths?: components["schemas"]["HistoricalFigure"][] | null;
        };
        /** @enum {string} */
        SiteConqueredType: "Unknown" | "Pillaging" | "Destruction" | "Conquest" | "TributeEnforcement" | "Invasion";
        SiteLink: {
            readonly siteToLink?: string | null;
            type?: components["schemas"]["SiteLinkType"];
            /** Format: int32 */
            subId?: number;
            /** Format: int32 */
            occupationId?: number;
            readonly entityToLink?: string | null;
        };
        /** @enum {string} */
        SiteLinkType: "Unknown" | "Lair" | "Hangout" | "HomeSiteBuilding" | "HomeSiteUnderground" | "HomeStructure" | "SeatOfPower" | "Occupation" | "HomeSiteRealizationBuilding" | "HomeSiteAbstractBuilding" | "PrisonSiteBuildingProfile";
        SiteMarkerDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            type?: components["schemas"]["SiteType"];
            coordinates?: components["schemas"]["Location"][] | null;
        };
        SiteProperty: {
            /** Format: int32 */
            id?: number;
            type?: components["schemas"]["SitePropertyType"];
            readonly ownerLink?: string | null;
            readonly structureLink?: string | null;
            readonly siteLink?: string | null;
        };
        /** @enum {string} */
        SitePropertyType: "Unknown" | "House";
        /** @enum {string} */
        SiteType: "Unknown" | "Cave" | "Fortress" | "ForestRetreat" | "DarkFortress" | "Town" | "Hamlet" | "Vault" | "DarkPits" | "Hillocks" | "Tomb" | "Tower" | "MountainHalls" | "Camp" | "Lair" | "Labyrinth" | "Shrine" | "ImportantLocation" | "Fort" | "Monastery" | "Castle";
        Size: {
            readonly isEmpty?: boolean;
            /** Format: int32 */
            width?: number;
            /** Format: int32 */
            height?: number;
        };
        Skill: {
            name?: string | null;
            /** Format: int32 */
            points?: number;
            readonly rank?: string | null;
        };
        Squad: {
            race?: components["schemas"]["CreatureInfo"];
            /** Format: int32 */
            numbers?: number;
            /** Format: int32 */
            deaths?: number;
            /** Format: int32 */
            site?: number;
            /** Format: int32 */
            population?: number;
        };
        State: {
            hfState?: components["schemas"]["HfState"];
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            endYear?: number;
        };
        Structure: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            altName?: string | null;
            typeEnum?: components["schemas"]["StructureType"];
            coordinates?: components["schemas"]["Location"][] | null;
            readonly inhabitantLinks?: string[] | null;
            readonly deityToLink?: string | null;
            readonly religionToLink?: string | null;
            structureSubType?: components["schemas"]["StructureSubType"];
            readonly ownerToLink?: string | null;
            readonly entityToLink?: string | null;
            readonly siteToLink?: string | null;
            /** Format: int32 */
            localId?: number;
            readonly copiedArtifactLinks?: string[] | null;
        };
        /** @enum {string} */
        StructureSubType: "Unknown" | "Dungeon" | "Sewers" | "Catacombs";
        /** @enum {string} */
        StructureType: "Unknown" | "MeadHall" | "Market" | "Keep" | "Temple" | "Dungeon" | "InnTavern" | "Tomb" | "UnderworldSpire" | "Library" | "Tower" | "CountingHouse" | "Guildhall";
        UndergroundRegion: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            /** Format: int32 */
            depth?: number | null;
            regionType?: components["schemas"]["RegionType"];
            readonly battleLinks?: string[] | null;
            coordinates?: components["schemas"]["Location"][] | null;
            /** Format: int32 */
            readonly squareTiles?: number;
        };
        VagueRelationship: {
            /** Format: int32 */
            hfId?: number;
            type?: components["schemas"]["VagueRelationshipType"];
        };
        /** @enum {string} */
        VagueRelationshipType: "Unknown" | "WarBuddy" | "AthleteBuddy" | "ChildhoodFriend" | "PersecutionGrudge" | "SupernaturalGrudge" | "ReligiousPersecutionGrudge" | "ArtisticBuddy" | "JealousObsession" | "Grudge" | "JealousRelationshipGrudge" | "ScholarBuddy" | "BusinessRival" | "AthleticRival" | "Lover" | "FormerLover" | "Lieutenant";
        War: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            startYear?: number;
            /** Format: int32 */
            startSeconds72?: number;
            /** Format: int32 */
            endYear?: number;
            /** Format: int32 */
            endSeconds72?: number;
            type?: string | null;
            parentCollection?: components["schemas"]["EventCollection"];
            collection?: components["schemas"]["WorldEvent"][] | null;
            collections?: components["schemas"]["EventCollection"][] | null;
            collectionIDs?: number[] | null;
            notable?: boolean;
            allEvents?: components["schemas"]["WorldEvent"][] | null;
            world?: components["schemas"]["World"];
            name?: string | null;
            /** Format: int32 */
            length?: number;
            /** Format: int32 */
            deathCount?: number;
            readonly deaths?: {
                [key: string]: number;
            } | null;
            /** Format: int32 */
            attackerDeathCount?: number;
            /** Format: int32 */
            defenderDeathCount?: number;
            attacker?: components["schemas"]["Entity"];
            defender?: components["schemas"]["Entity"];
            readonly battles?: components["schemas"]["Battle"][] | null;
            readonly conquerings?: components["schemas"]["SiteConquered"][] | null;
            readonly sitesLost?: components["schemas"]["Site"][] | null;
            readonly attackerSitesLost?: components["schemas"]["Site"][] | null;
            readonly defenderSitesLost?: components["schemas"]["Site"][] | null;
            attackerVictories?: components["schemas"]["EventCollection"][] | null;
            defenderVictories?: components["schemas"]["EventCollection"][] | null;
            readonly attackerBattleVictories?: components["schemas"]["Battle"][] | null;
            readonly defenderBattleVictories?: components["schemas"]["Battle"][] | null;
            readonly errorBattles?: components["schemas"]["Battle"][] | null;
            readonly attackerConquerings?: components["schemas"]["SiteConquered"][] | null;
            readonly defenderConquerings?: components["schemas"]["SiteConquered"][] | null;
            /** Format: double */
            readonly attackerToDefenderKills?: number;
            /** Format: double */
            readonly attackerToDefenderVictories?: number;
        };
        World: {
            name?: string | null;
            alternativeName?: string | null;
            readonly regions?: components["schemas"]["WorldRegion"][] | null;
            readonly undergroundRegions?: components["schemas"]["UndergroundRegion"][] | null;
            readonly landmasses?: components["schemas"]["Landmass"][] | null;
            readonly mountainPeaks?: components["schemas"]["MountainPeak"][] | null;
            readonly identities?: components["schemas"]["Identity"][] | null;
            readonly rivers?: components["schemas"]["River"][] | null;
            readonly sites?: components["schemas"]["Site"][] | null;
            readonly historicalFigures?: components["schemas"]["HistoricalFigure"][] | null;
            readonly entities?: components["schemas"]["Entity"][] | null;
            readonly wars?: components["schemas"]["War"][] | null;
            readonly battles?: components["schemas"]["Battle"][] | null;
            readonly beastAttacks?: components["schemas"]["BeastAttack"][] | null;
            readonly eras?: components["schemas"]["Era"][] | null;
            readonly artifacts?: components["schemas"]["Artifact"][] | null;
            readonly worldConstructions?: components["schemas"]["WorldConstruction"][] | null;
            readonly poeticForms?: components["schemas"]["PoeticForm"][] | null;
            readonly musicalForms?: components["schemas"]["MusicalForm"][] | null;
            readonly danceForms?: components["schemas"]["DanceForm"][] | null;
            readonly writtenContents?: components["schemas"]["WrittenContent"][] | null;
            readonly structures?: components["schemas"]["Structure"][] | null;
            readonly events?: components["schemas"]["WorldEvent"][] | null;
            readonly eventCollections?: components["schemas"]["EventCollection"][] | null;
            readonly entityPopulations?: components["schemas"]["EntityPopulation"][] | null;
            readonly sitePopulations?: components["schemas"]["Population"][] | null;
            readonly civilizedPopulations?: components["schemas"]["Population"][] | null;
            readonly outdoorPopulations?: components["schemas"]["Population"][] | null;
            readonly undergroundPopulations?: components["schemas"]["Population"][] | null;
            /** Format: int32 */
            width?: number;
            /** Format: int32 */
            height?: number;
            /** Format: int32 */
            currentYear?: number;
            /** Format: int32 */
            currentMonth?: number;
            /** Format: int32 */
            currentDay?: number;
            readonly playerRelatedObjects?: components["schemas"]["DwarfObject"][] | null;
        };
        WorldConstruction: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            worldConstructionType?: components["schemas"]["WorldConstructionType"];
            coordinates?: components["schemas"]["Location"][] | null;
            readonly site1ToLink?: string | null;
            readonly site2ToLink?: string | null;
            readonly sectionLinks?: string[] | null;
            readonly masterConstructionToLink?: string | null;
        };
        /** @enum {string} */
        WorldConstructionType: "Unknown" | "Road" | "Bridge" | "Tunnel";
        WorldDto: {
            name?: string | null;
            alternativeName?: string | null;
            /** Format: int32 */
            width?: number;
            /** Format: int32 */
            height?: number;
            /** Format: int32 */
            currentYear?: number;
            /** Format: int32 */
            currentMonth?: number;
            /** Format: int32 */
            currentDay?: number;
            siteMarkers?: components["schemas"]["SiteMarkerDto"][] | null;
        };
        WorldEvent: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            year?: number;
            /** Format: int32 */
            month?: number;
            /** Format: int32 */
            day?: number;
            readonly monthName?: string | null;
            readonly date?: string | null;
            /** Format: int32 */
            seconds72?: number;
            type?: string | null;
            parentCollection?: components["schemas"]["EventCollection"];
            world?: components["schemas"]["World"];
        };
        WorldEventDto: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            year?: number;
            /** Format: int32 */
            month?: number;
            /** Format: int32 */
            day?: number;
            monthName?: string | null;
            date?: string | null;
            type?: string | null;
            html?: string | null;
        };
        WorldEventDtoPaginatedResponse: {
            items?: components["schemas"]["WorldEventDto"][] | null;
            /** Format: int32 */
            totalCount?: number;
            /** Format: int32 */
            totalFilteredCount?: number;
            /** Format: int32 */
            pageSize?: number;
            /** Format: int32 */
            pageNumber?: number;
            /** Format: int32 */
            totalPages?: number;
        };
        WorldObjectDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            html?: string | null;
            /** Format: int32 */
            eventCount?: number;
        };
        WorldObjectDtoPaginatedResponse: {
            items?: components["schemas"]["WorldObjectDto"][] | null;
            /** Format: int32 */
            totalCount?: number;
            /** Format: int32 */
            totalFilteredCount?: number;
            /** Format: int32 */
            pageSize?: number;
            /** Format: int32 */
            pageNumber?: number;
            /** Format: int32 */
            totalPages?: number;
        };
        WorldRegion: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            /** Format: int32 */
            depth?: number | null;
            regionType?: components["schemas"]["RegionType"];
            deaths?: string[] | null;
            readonly notableDeathLinks?: string[] | null;
            readonly battleLinks?: string[] | null;
            coordinates?: components["schemas"]["Location"][] | null;
            /** Format: int32 */
            readonly squareTiles?: number;
            readonly siteLinks?: string[] | null;
            readonly mountainPeakLinks?: string[] | null;
            evilness?: components["schemas"]["Evilness"];
            readonly forceLink?: string | null;
        };
        WrittenContent: {
            /** Format: int32 */
            id?: number;
            icon?: string | null;
            name?: string | null;
            type?: string | null;
            subtype?: string | null;
            /** Format: int32 */
            readonly eventCount?: number;
            /** Format: int32 */
            pageStart?: number;
            /** Format: int32 */
            pageEnd?: number;
            writtenContentType?: components["schemas"]["WrittenContentType"];
            /** Format: int32 */
            authorId?: number;
            styles?: string[] | null;
            references?: components["schemas"]["Reference"][] | null;
            readonly typeAsString?: string | null;
            /** Format: int32 */
            readonly pageCount?: number;
            /** Format: int32 */
            authorRoll?: number;
            /** Format: int32 */
            formId?: number;
        };
        /** @enum {string} */
        WrittenContentType: "Unknown" | "Autobiography" | "Biography" | "Chronicle" | "Dialog" | "Essay" | "Guide" | "Letter" | "Manual" | "Novel" | "Play" | "Poem" | "ShortStory" | "Choreography" | "MusicalComposition" | "StarChart" | "CulturalHistory" | "ComparativeBiography" | "CulturalComparison" | "Atlas" | "TreatiseOnTechnologicalEvolution" | "AlternateHistory" | "StarCatalogue" | "Dictionary" | "Genealogy" | "Encyclopedia" | "BiographicalDictionary";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
